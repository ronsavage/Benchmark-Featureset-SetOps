[Array::AsObject]
include = Yes
notes = Depends indirectly on Date::Manip

[Array::Compare]
include = No
notes = Array::Compare has very limited (focused) functionality

[Array::Uniq]
include = No
notes = Array::Uniq likewise

[Array::Utils]
include = No
notes = Array::Utils likewise

[Bit::Vector]
include = No
notes = Bit::Vector is sophisticated, but is more like an underlying support mechanism for sets<br/>and hence leaves a lot up to the end-user

[EO::Array]
include = No
notes = EO::Array is an OO wrapper around Perl's array type

[Object::Array]
include = Yes
notes = Doesn't really offer set operations
overload_type = 1
sub_classes = Object::Array::Plugin::Builtins, Object::Array::Plugin::ListMoreUtils

[Set::Array]
include = Yes
notes = Some methods, e.g. difference(), update the invocant unexpectedly
overload_type = 1

[Set::Bag]
include = Yes
notes = Supports multisets, so new() takes a hash, and elements are (name, value) pairs
overload_type = 1

[Set::DynamicGroups]
include = No
notes = Set::DynamicGroups handles multisets, as does Set::Bag.<br />It's designed to allow groups to be defined dynamically by rules based on other groups.<br />It has partial support for nested groups

[Set::Equivalence]
include = No
notes = A set of objects or scalars with no duplicates and a user-configurable equivalence relation

[Set::Groups]
include = No
notes = Set::Groups supports nested groups, and hence a completely different set of methods

[Set::Hash]
include = No
notes = Set::Hash allows you to create strings as objects and use OO-style methods on them.<br />It's a sub-class of Set::Array

[Set::Light]
include = Yes
notes = Claims to be very small and fast compared to Set::Object and Set::Scalar
overload_type = 2

[Set::NestedGroups]
include = No
notes = Set::NestedGroups is like Set::Groups

[Set::Object]
include = Yes
notes = Requires a C compiler. Second choice after Set::Tiny
overload_type = 1

[Set::Relation]
include = No
notes = Set::Relation is an emulator for RDBMS-style relational data

[Set::Scalar]
include = Yes
notes = Long term unfixed bug in Set::Scalar::ValuedUniverse
overload_type = 1
sub_classes = Set::Scalar::Base, Set::Scalar::Null, Set::Scalar::Real, Set::Scalar::Virtual

[Set::SortedArray]
include = Yes
notes = Modification of the set (i.e. after creation) is not supported
overload_type = 1

[Set::Tiny]
include = Yes
notes = Recommended, taking in to account features (+), unfixed bugs (-),<br />minimal dependencies (+) and, lastly, speed (+). Stats below
overload_type = 2

[Set::Toolkit]
include = Yes
notes = Bug report of random test failures
overload_type = 1
